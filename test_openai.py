#!/usr/bin/env python3
"""–¢–µ—Å—Ç OpenAI API –∫–ª—é—á–∞"""

import os
import sys
from openai import OpenAI

def test_openai_api():
    api_key = os.getenv('OPENAI_API_KEY')
    
    if not api_key:
        print("‚ùå OPENAI_API_KEY –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return False
    
    print(f"üîç –¢–µ—Å—Ç—É—î–º–æ OpenAI API...")
    print(f"API Key: {api_key[:10]}...{api_key[-4:]}")
    
    try:
        client = OpenAI(api_key=api_key)
        
        # –ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç –∑–∞–ø–∏—Ç
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "user", "content": "Say 'Hello' in Ukrainian"}
            ],
            max_tokens=10
        )
        
        result = response.choices[0].message.content
        print(f"‚úÖ OpenAI –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {result}")
        print(f"‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ —Ç–æ–∫–µ–Ω—ñ–≤: {response.usage.total_tokens}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ OpenAI API: {e}")
        return False

if __name__ == "__main__":
    print("ü§ñ –¢–µ—Å—Ç OpenAI API")
    print("=" * 40)
    
    success = test_openai_api()
    
    if success:
        print("\nüéâ OpenAI API –ø—Ä–∞—Ü—é—î!")
        print("–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ –Ω–∞ https://platform.openai.com/usage")
    else:
        print("\nüí• OpenAI API –Ω–µ –ø—Ä–∞—Ü—é—î.")
        print("–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ API –∫–ª—é—á —Ç–∞ –±–∞–ª–∞–Ω—Å.")
    
    sys.exit(0 if success else 1)
